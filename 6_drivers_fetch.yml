target_default: 6_drivers_fetch

packages:
  - sp
  - scipiper
  - dplyr
  - ncdf4
  - sf
  - stringr
  - yaml

sources:
  - 6_drivers/src/nldas_cube_utils.R
  - 6_drivers/src/nldas_feather_utils.R
  - 6_drivers/src/grid_utils.R

targets:
  6_drivers_fetch:
    depends:
      - "6_drivers/log/nc/6_fetch_new_cubes_tasks.ind"
      # - append_cubes # how to make a task plan that can be empty?
      - "6_drivers/log/feather/6_fetch_new_cell_tasks.ind"

  replete_time_range:
    command: c(t0=I(0), t1 = I(379366)) # for doing one timechunk: 24999

  cell_data_dir:
    command: c(I("/Volumes/ThunderBlade/NLDAS_feather/"))

  cell_ind_dir:
    command: c(I("6_drivers/log/feather"))

  new_feature_centroids:
    command: readRDS("2_crosswalk_munge/out/centroid_lakes_sf.rds")

  # info from OPeNDAP: https://hydro1.gesdisc.eosdis.nasa.gov/dods/NLDAS_FORA0125_H.002
  NLDAS_grid:
    command: create_ldas_grid(x0 = I(-124.9375), y0 = I(25.0625), x_num = I(464), y_num = I(224), cell_res = I(0.125))

  feature_NLDAS_cells:
    command: cells_containing_points(NLDAS_grid, new_feature_centroids)

  nldas_new_cells:
    command: as_OPeNDAP_cells(feature_NLDAS_cells, variables=I(c('dlwrfsfc','pressfc','apcpsfc','vgrd10m','ugrd10m','dswrfsfc','spfh2m','tmp2m')))

  new_cell_plan:
    command: create_new_cell_task_plan(nldas_new_cells, cube_files_ind = "6_drivers/in/6_fetch_new_cubes_tasks.ind",
      cell_data_dir = cell_data_dir, cell_ind_dir = cell_ind_dir)

  "6_fetch_new_cell_tasks.yml":
    command: create_cell_task_makefile(target_name, new_cell_plan)

  "6_drivers/log/feather/6_fetch_new_cell_tasks.ind":
    command: scmake(I("6_fetch_new_cell_tasks.ind_promise"), remake_file = "6_fetch_new_cell_tasks.yml")
    depends:
      - 6_drivers/in/6_fetch_new_cubes_tasks.ind
